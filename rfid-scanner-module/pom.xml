<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <modelVersion>4.0.0</modelVersion>
    <groupId>orwell</groupId>
    <artifactId>rfid-scanner-module</artifactId>
    <version>0.1.0</version>
    <name>RFID scanner - module</name>
    <parent>
        <groupId>orwell</groupId>
        <artifactId>rfid-scanner</artifactId>
        <version>0.1.0</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>lejos.mf</groupId>
            <artifactId>nxt-module</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>lejos.nxt</groupId>
            <artifactId>classes</artifactId>
            <version>0.9.1beta-3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>

                    <compilerArguments>
                        <verbose />
                        <!-- Here we force the load of classes.jar because leJOS does not
                         use the standard java.lang classes but has its own versions in classes.jar. -->
                        <bootclasspath>${project.dependencies}</bootclasspath>

                    </compilerArguments>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>link</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>nxjlink</executable>
                            <!-- optional -->
                            <workingDirectory>./target/classes</workingDirectory>
                            <arguments>
                                <argument>-v</argument>
                                <argument>-oRfidScanner.nxj</argument>
                                <argument>orwell.rfid.Scanner</argument>
                                <argument>--classpath</argument>
                                <argument>.:../../../lejos-mf-nxt/lejos-mf-nxt-module/target/classes:../../../lejos-mf-nxt/lejos-mf-common/target/classes</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>nxjupload</executable>
                            <!-- optional -->
                            <workingDirectory>./target/classes</workingDirectory>
                            <arguments>
                                <argument>-r</argument>
                                <argument>-n</argument>
                                <argument>${robotname}</argument>
                                <argument>RfidScanner.nxj</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>

            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>robotname</name>
                                    <value>${robotname}</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <dependencies>
                    <!-- Here we force the usage of Junit to prevent testNG from trying
                        and then generating an error -->
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.17</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <repoToken>${COVERALLS_REPO_TOKEN}</repoToken>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <format>xml</format>
                    <maxmem>256m</maxmem>
                    <!-- aggregated reports for multi-module projects -->
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
